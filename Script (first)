#!/usr/bin/env bash
cd /home/potato/Desktop/apc/src
nasm -f elf boot.asm -o /home/potato/Desktop/apc/obj/boot.o
echo boot.asm compiled
nasm -f elf pic.asm -o /home/potato/Desktop/apc/obj/pic.o
echo pic.asm compiled
nasm -f elf pit.asm -o /home/potato/Desktop/apc/obj/pit.o
echo pit.asm compiled
nasm -f elf ps2.asm -o /home/potato/Desktop/apc/obj/ps2.o
echo ps2.asm compiled
gcc -Wall -c -m16 -nostdlib main.c -o /home/potato/Desktop/apc/obj/main.o
echo main.c compiled
gcc -Wall -c -m16 -nostdlib screenManager.c -o /home/potato/Desktop/apc/obj/screenManager.o
echo screenManager.c compiled
gcc -Wall -c -m16 -nostdlib string.c -o /home/potato/Desktop/apc/obj/string.o
echo string.c compiled
gcc -Wall -c -m16 -nostdlib keyboard.c -o /home/potato/Desktop/apc/obj/keyboard.o
echo keyboard.c compiled
cd /home/potato/Desktop/apc/obj
gcc -Wall -T myLink.ld -m16 -nostdlib -ffreestanding boot.o main.o screenManager.o string.o pic.o pit.o ps2.o keyboard.o -o final.o 
echo linking boot.o,main.o,screnManager.o,string.o
objcopy -j .text -I elf32-little -O binary final.o /home/potato/Desktop/apc/bin/text
echo text section of final.o created: text.bin
objcopy -j .data -I elf32-little -O binary final.o /home/potato/Desktop/apc/bin/data
echo data section of final.o created: data.bin
objdump -D -j .text -mi386 -Maddr16,data16,intel final.o
echo data section of final.o
objdump -j .data -w -s final.o
cd /home/potato/Desktop/apc/bin
objdump -D -b binary -mi386 -Maddr16,data16,intel text
hexdump -C data
echo ---------------------
echo padding data and text bin files
echo ----------------------
truncate -s 3072 text
truncate -s 512 data
objdump -D -b binary -mi386 -Maddr16,data16,intel text
hexdump -C data
rm final
cat text >> final
cat data >> final
echo ---------------------
echo dumping final
echo ----------------------
hexdump -C final
sudo dd if=final of="/home/potato/Desktop/Bochs Folder/test.iso" bs=512 count=7
sudo chmod u=rwx,g=rwx,o=rwx "/home/potato/Desktop/Bochs Folder/test.iso"
cd "/home/potato/Desktop/Bochs Folder/"
bochs
$SHELL
